import numpy as np

# Calcula la entropía de Von Neumann de una matriz de densidad
def von_neumann_entropy(rho):
    eigenvalues = np.linalg.eigvalsh(rho)
    eigenvalues = eigenvalues[eigenvalues > 0]
    entropy = -np.sum(eigenvalues * np.log2(eigenvalues))
    return entropy

# Matrices de densidad reducidas del estado W (proporcionadas anteriormente)
rho_12_W = np.array([
    [0, 0, 0, 0],
    [0, 1/3, 1/3, 0],
    [0, 1/3, 1/3, 0],
    [0, 0, 0, 0]
])

rho_13_W = rho_12_W  # Las matrices son iguales por la simetría del estado |W⟩
rho_23_W = rho_12_W  # Las matrices son iguales por la simetría del estado |W⟩


S_12_W = von_neumann_entropy(rho_12_W)
S_13_W = von_neumann_entropy(rho_13_W)
S_23_W = von_neumann_entropy(rho_23_W)

S_12_W, S_13_W, S_23_W
