import numpy as np

def partial_trace(rho, keep):
    # Determinar los qubits sobre los que se va a realizar la traza
    qubits = np.array(range(int(np.log2(rho.shape[0])))
    trace_over = np.delete(qubits, keep)
    new_shape = [2] * len(qubits) + [2] * len(qubits)
    rho = rho.reshape(new_shape)
    # Hacer la traza parcial sobre los qubits no deseados
    for q in trace_over:
        rho = rho.trace(axis1=q, axis2=q+len(qubits))
    # Eliminar las dimensiones singulares resultantes y devolver el resultado
    return rho.squeeze()

# Crear la matriz de densidad para el estado |W‚ü©
ket_W = np.array([0, 0, 0, 1, 0, 1, 1, 0]) / np.sqrt(3)
rho_W = np.outer(ket_W, ket_W.conjugate())

# Calcular la matriz de densidad reducida para los qubits (1,2)
rho_12_W = partial_trace(rho_W, [0, 1])
# Calcular la matriz de densidad reducida para los qubits (1,3)
rho_13_W = partial_trace(rho_W, [0, 2])
# Calcular la matriz de densidad reducida para los qubits (2,3)
rho_23_W = partial_trace(rho_W, [1, 2])
